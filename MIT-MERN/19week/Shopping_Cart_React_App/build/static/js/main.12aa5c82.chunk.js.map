{"version":3,"sources":["Components/products.jsx","App.js","reportWebVitals.js","index.js"],"names":["products","itemID","name","country","cost","instock","cartItemID","itemsToUpdate","dataFetchReducer","state","action","type","isLoading","isError","isEmptyURL","data","payload","Error","Products","props","useState","React","items","setItems","cart","setCart","query","setQuery","initialUrl","initialData","useEffect","useReducer","url","setUrl","dispatch","console","log","didCancel","a","axios","result","fetchData","useDataApi","doFetch","addToCart","e","target","item","filter","Number","productIndex","findIndex","object","JSON","stringify","list","map","index","n","style","marginBottom","Image","src","width","height","roundedCircle","margin","Button","variant","size","onClick","cartList","Card","Header","display","gridTemplateColumns","gridTemplateRows","alignSelf","Accordion","Toggle","as","eventKey","justifySelf","Collapse","newCart","deleteCartItem","Body","finalList","total","checkOut","final","reduce","accum","current","length","newItems","newItem","newItemID","restockProducts","Container","Row","Col","listStyleType","padding","color","onSubmit","event","preventDefault","value","onChange","marginRight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12aa5c82.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n// React Bootstrap \nimport {\n  Card,\n  Accordion,\n  Button,\n  Container,\n  Row,\n  Col,\n  Image\n} from 'react-bootstrap';\n\n// simulate getting products from DataBase\n// Initial list of products\nlet products = [\n  { itemID: 1, name: \"Apple\", country: \"Italy\", cost: 3, instock: 10 },\n  { itemID: 2, name: \"Orange\", country: \"Spain\", cost: 4, instock: 3 },\n  { itemID: 3, name: \"Beans\", country: \"USA\", cost: 2, instock: 5 },\n  { itemID: 4, name: \"Cabbage\", country: \"USA\", cost: 1, instock: 8 },\n];\n\nlet itemID = 5;\nlet cartItemID = 0;\nlet itemsToUpdate = false;\n\n// Fetch Data\nconst useDataApi = (initialUrl, initialData) => {\n  const {useState, useEffect, useReducer} = React;\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    isEmptyURL: false,\n    data: initialData,\n  });\n\n  console.log(`useDataApi called`);\n\n  useEffect(() => {\n    console.log(\"useEffect Called\");\n    console.log(`URL: ${url}`)\n    let didCancel = false;\n    const fetchData = async () => {\n      console.log(\"FETCH INIT\")\n      dispatch({ type: \"FETCH_INIT\" });\n      try {\n        const result = await axios(url);\n        console.log(\"FETCH FROM URL\");\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" });\n        }\n      }\n    };\n    if (url !== 'reset' && url !== 'emptyURL') {\n      fetchData();\n    } else if (url === 'reset') {\n      dispatch({ type: \"RESET\"});\n    } else if (url === 'emptyURL') {\n      dispatch({ type: \"EMPTY_URL\"});\n    }\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"RESET\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        isEmptyURL: false,\n        data: [],\n      };\n      case \"EMPTY_URL\":\n        return {\n          ...state,\n          isLoading: false,\n          isError: true,\n          isEmptyURL: true,\n          data: [],\n        };\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isEmptyURL: false,\n        isError: false,\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        isEmptyURL: false,\n        data: action.payload,\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n        isEmptyURL: false,\n        data: [],\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst Products = (props) => {\n  // React\n  const {useState} = React;\n\n  // State\n  const [items, setItems] = useState(products);\n  const [cart, setCart] = useState([]);\n  const [query, setQuery] = useState(\"http://localhost:1337/products\");\n  const [{data, isLoading, isError, isEmptyURL}, doFetch] = useDataApi('reset',[]);\n\n  // Move Items To Cart\n  const addToCart = (e) => {\n    let name = e.target.name;\n    let item = items.filter((item) => item.itemID === Number(name))[0];\n    item = {...item, cartItemID};\n    cartItemID++;\n    if (item.instock > 0) {\n      setCart([...cart, item]);\n      const productIndex = items.findIndex((object) => object.itemID === item.itemID);\n      items[productIndex].instock--\n      setItems(items);\n    }\n  };\n\n  // Remove Items From Cart\n  const deleteCartItem = (item, index) => {\n    let newCart = cart.filter((item) => item.cartItemID !== index);\n    const productIndex = items.findIndex((object) => object.itemID === item.itemID);\n    items[productIndex].instock++\n    setItems(items);\n    setCart(newCart);\n  };\n\n  //Product List\n  console.log(`Items: ${JSON.stringify(items)}`);\n  let list = items.map((item, index) => {\n    let n;\n    switch (item.name) {\n      case 'Apple':\n        n = 1049;\n        break;\n      case 'Orange':\n        n = 1050;\n        break;\n      case 'Beans':\n        n = 1051;\n        break;\n      case 'Cabbage':\n        n = 1052;\n        break;\n      case 'Nuts':\n        n = 1053;\n        break;\n      case 'Plum':\n        n = 1054;\n        break;\n      default:\n        n = index + 1055;        \n    }\n    let url = \"https://picsum.photos/id/\" + n + \"/70\";\n\n    return (\n      <li key={item.itemID} style={{marginBottom: \"15px\"}}>\n        <Image src={url} width={70} height={70} roundedCircle style={{margin: \"4px 4px 4px 0\"}}></Image>\n        <Button variant=\"primary\" size=\"large\" style={{marginBottom: \"4px\"}} name={item.itemID} onClick={addToCart}>\n          {item.name}&nbsp;&#124;&nbsp;{`Cost: $${item.cost}`}&nbsp;&#124;&nbsp;{`Stock: ${item.instock}`}\n        </Button><br/>\n        <input name={item.itemID} type=\"submit\" onClick={addToCart}></input>\n      </li>\n    );\n  });\n\n  //Cart Contents\n  console.log(`Cart: ${JSON.stringify(cart)}`);\n  let cartList = cart.map((item) => {\n    return (\n      <Card key={item.cartItemID} style={{width: \"80%\"}}>\n        <Card.Header style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gridTemplateRows: \"1fr\"}}>\n          <div style={{alignSelf: \"center\"}}>{item.name}</div>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={item.cartItemID + 1} style={{justifySelf: \"end\"}}>\n            Delete\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse\n          onClick={() => deleteCartItem(item, item.cartItemID)}\n          eventKey={item.cartItemID + 1}\n        >\n          <Card.Body>\n            Delete item – ${item.cost} from {item.country}\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  });\n\n  // Checkout Items\n  let finalList = () => {\n    let total = checkOut();\n    let final = cart.map((item, index) => {\n      return (\n        <div key={item.cartItemID} index={index}>\n          {item.name}\n        </div>\n      );\n    });\n    return { final, total };\n  };\n\n  // Checkout Total\n  const checkOut = () => {\n    let costs = cart.map((item) => item.cost);\n    const reducer = (accum, current) => accum + current;\n    let newTotal = costs.reduce(reducer, 0);\n    return newTotal;\n  };\n\n  // Restock Products\n  const restockProducts = () => {\n    console.log(`Restock Products ${JSON.stringify(data)}`);\n    const newItems = data.map((newItem) => {\n      const {name, country, cost, instock} = newItem;\n      const newItemID = itemID;\n      itemID++;\n      return {itemID: newItemID, name, country, cost, instock};\n    });\n    setItems([...items, ...newItems]);\n    doFetch('reset');\n  };\n\n  console.log(`Items to update: ${itemsToUpdate}`);\n\n  // Restock Only After Data Fetch\n  if (itemsToUpdate && data.length) {\n    itemsToUpdate = false;\n    restockProducts()\n  }\n\n  //Page\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Product List</h1>\n          <ul style={{listStyleType: \"none\", padding: \"0\"}}>{list}</ul>\n        </Col>\n        <Col>\n          <h1>Cart Contents</h1>\n          <Accordion>{cartList}</Accordion>\n        </Col>\n        <Col>\n          <h1>CheckOut </h1>\n          <Button>CheckOut ${finalList().total}</Button>\n          <div> {finalList().total > 0 && finalList().final} </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {isError && !isEmptyURL && <div style={{color: \"red\", height: \"25px\"}}>Invalid URL for data source.</div>}\n          {isError && isEmptyURL && <div style={{color: \"red\", height: \"25px\"}}>A URL must be provided.</div>}\n          {!isError && <div style={{height: \"25px\"}}></div>}\n          <form\n            onSubmit={(event) => {\n              doFetch(query ? query : 'emptyURL');\n              itemsToUpdate = true;\n              console.log(`Restock called on ${query}`);\n              event.preventDefault();\n            }}\n            style={{marginBottom: \"20px\"}}\n          >\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n              style={{width: \"300px\", marginRight: \"10px\"}}\n            />\n            <button type=\"submit\">{!isLoading ? 'Restock Products' : 'Loading...'}</button>\n          </form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Products;","// import logo from './logo.svg';\n// import './App.css';\nimport Products from './Components/products.jsx'\n\nfunction App() {\n  return <Products></Products>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}